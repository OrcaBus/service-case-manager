# Generated by Django 5.2.2 on 2025-08-29 06:34

import app.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Case",
            fields=[
                (
                    "orcabus_id",
                    app.fields.OrcaBusIdField(primary_key=True, serialize=False),
                ),
                ("title", models.CharField(blank=True, null=True, unique=True)),
                ("description", models.CharField(blank=True, null=True)),
                ("type", models.CharField(blank=True, null=True)),
                ("last_modified", models.DateTimeField(auto_now=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ExternalEntity",
            fields=[
                (
                    "orcabus_id",
                    app.fields.OrcaBusIdField(primary_key=True, serialize=False),
                ),
                (
                    "prefix",
                    models.CharField(
                        blank=True,
                        help_text="The prefix used in the orcabus_id. Each orcabus_id has a prefix that may correspond to the same or different service names. This indicates which entity the ID belongs to.",
                        null=True,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        help_text="The entity type within its service, local to that service. Typically, this matches the subpath to the entity, such as library, subject, or sequence.",
                        null=True,
                    ),
                ),
                (
                    "service_name",
                    models.CharField(
                        blank=True,
                        help_text="The domain name or microservice name where the actual entity is stored. E.g. metadata, workflow, sequence",
                        null=True,
                    ),
                ),
                (
                    "alias",
                    models.CharField(
                        blank=True,
                        help_text="A human-readable name or alias for this entity, such as a library ID or workflow run ID, for easier identification than the orcabus_id.",
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "orcabus_id",
                    app.fields.OrcaBusIdField(primary_key=True, serialize=False),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("name", models.CharField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CaseExternalEntityLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "added_via",
                    models.CharField(
                        blank=True,
                        help_text="The external entity id that was added to the case",
                        null=True,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now=True)),
                (
                    "case",
                    models.ForeignKey(
                        db_column="case_orcabus_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.case",
                    ),
                ),
                (
                    "external_entity",
                    models.ForeignKey(
                        db_column="external_entity_orcabus_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.externalentity",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="case",
            name="external_entity_set",
            field=models.ManyToManyField(
                blank=True,
                related_name="case_set",
                through="app.CaseExternalEntityLink",
                to="app.externalentity",
            ),
        ),
        migrations.CreateModel(
            name="State",
            fields=[
                (
                    "orcabus_id",
                    app.fields.OrcaBusIdField(primary_key=True, serialize=False),
                ),
                ("status", models.CharField(help_text="The status of the case.")),
                ("timestamp", models.DateTimeField(auto_now=True)),
                (
                    "case",
                    models.ForeignKey(
                        db_column="case_orcabus_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.case",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "orcabus_id",
                    app.fields.OrcaBusIdField(primary_key=True, serialize=False),
                ),
                ("text", models.CharField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now=True)),
                (
                    "case",
                    models.ForeignKey(
                        db_column="case_orcabus_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.case",
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        blank=True,
                        db_column="state_orcabus_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.state",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        db_column="user_orcabus_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CaseUserLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Some description of the user in the case (e.g. 'Case Owner', 'Case Manager', etc.)",
                        null=True,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now=True)),
                (
                    "case",
                    models.ForeignKey(
                        db_column="case_orcabus_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.case",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        db_column="user_orcabus_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.user",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="case",
            name="user_set",
            field=models.ManyToManyField(
                blank=True,
                related_name="case_set",
                through="app.CaseUserLink",
                to="app.user",
            ),
        ),
    ]
